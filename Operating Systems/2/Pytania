switch (fork())
{
	case -1:
		perror("fork error");
		exit(1);
	case 0: // proces potomny
		execlp("./nowy_program.x","nowy_program.x",NULL);
		perror("execlp error");
		_exit(2);
	default: // proces macierzysty
};

Ile procesów powstanie przy n-krotnym wywołaniu funkcji fork-exec jak wyżej i dlaczego?

Powstanie n procesów potomnych, ponieważ w każdej z n iteracji proces macierzysty utworzy 1 proces potomny. Z kolei żaden proces potomny nie utworzy więcej procesów, ponieważ funkcja execlp nadpisuje obecny proces nowym procesem. W przypadku procesu potomnego żadna linijka kodu po linijce z execlp nie wykona się, ponieważ program "nowy_program.x" zastąpi obecny program (chyba że wystąpi jakiś błąd, ale wtedy proces potomny też skończy działanie przez funkcję _exit).
